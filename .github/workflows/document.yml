---

# Does not include PyPi badge



#####################
## GitHub Workflow ##
#####################

name: Documentation

permissions:
  contents: write

on:  # yamllint disable-line rule:truthy

  workflow_run:
    workflows:
      - Validation
    types:
      - completed
    branches:
      - main

jobs:



  #################
  ## Python 3.12 ##
  #################
  validate312:
    name: Python 3.12
    runs-on: ubuntu-latest
    env:
      PYTHON: python3
    steps:


      # Standard project construction
      - name: Setup Python
        uses: actions/setup-python@v4
        with: {python-version: '3.12'}

      # Additional workflow dependency
      - name: Compile ImageMagick
        run: |

          sudo apt-get update

          sudo apt-get install -y \
            build-essential \
            ghostscript \
            libjpeg-dev \
            libpng-dev \
            libtiff-dev \
            libgif-dev

          wget https://download.imagemagick.org/ImageMagick/download/ImageMagick.tar.gz

          tar xvzf ImageMagick.tar.gz

          cd ImageMagick-*

          ./configure
          make
          sudo make install

          sudo ldconfig /usr/local/lib


      # Standard project construction
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: main

      # Standard project construction
      - name: Checkout static branch
        uses: actions/checkout@v4
        with:
          ref: static
          path: static


      # Standard project construction
      - name: Build environment
        working-directory: main
        run: |
          pip install encommon
          pip install -r require.txt

      # Standard project construction
      - name: Build environment
        working-directory: static
        run: mkdir -p badges


      # Construct additional content
      - name: Cache the information
        run: |

          FLAKE8="unknown"
          PYLINT="unknown"
          MYPY="unknown"
          YAMLLINT="unknown"

          if [ -f "static/validate/index.json" ]; then
            FLAKE8=$(jq -r '.flake8 // "unknown"' static/validate/index.json)
            PYLINT=$(jq -r '.pylint // "unknown"' static/validate/index.json)
            MYPY=$(jq -r '.mypy // "unknown"' static/validate/index.json)
            YAMLLINT=$(jq -r '.yamllint // "unknown"' static/validate/index.json)
          fi

          echo "flake8=$FLAKE8" >> $GITHUB_ENV
          echo "pylint=$PYLINT" >> $GITHUB_ENV
          echo "mypy=$MYPY" >> $GITHUB_ENV
          echo "yamllint=$YAMLLINT" >> $GITHUB_ENV


      # Construct additional content
      - name: Build badge for Flake8
        working-directory: main
        run: |

          STATUS="${{ env.flake8 }}"
          COLOR="gray"

          if [[ "$STATUS" == "passing" ]]; then
            COLOR="green"
          elif [[ "$STATUS" == "failing" ]]; then
            COLOR="red"
          fi

          python makebadge.py \
            "../static/badges/flake8.png" \
            "Flake8" "$COLOR" "$STATUS"

      # Construct additional content
      - name: Build badge for Pylint
        working-directory: main
        run: |

          STATUS="${{ env.pylint }}"
          COLOR="gray"

          if [[ "$STATUS" == "passing" ]]; then
            COLOR="green"
          elif [[ "$STATUS" == "failing" ]]; then
            COLOR="red"
          fi

          python makebadge.py \
            "../static/badges/pylint.png" \
            "Pylint" "$COLOR" "$STATUS"

      # Construct additional content
      - name: Build badge for Mypy
        working-directory: main
        run: |

          STATUS="${{ env.mypy }}"
          COLOR="gray"

          if [[ "$STATUS" == "passing" ]]; then
            COLOR="green"
          elif [[ "$STATUS" == "failing" ]]; then
            COLOR="red"
          fi

          python makebadge.py \
            "../static/badges/mypy.png" \
            "Mypy" "$COLOR" "$STATUS"

      # Construct additional content
      - name: Build badge for YAMLlint
        working-directory: main
        run: |

          STATUS="${{ env.yamllint }}"
          COLOR="gray"

          if [[ "$STATUS" == "passing" ]]; then
            COLOR="green"
          elif [[ "$STATUS" == "failing" ]]; then
            COLOR="red"
          fi

          python makebadge.py \
            "../static/badges/yamllint.png" \
            "YAMLlint" "$COLOR" "$STATUS"


      # Save content in static branch
      - name: Store static content
        if: github.ref_name == 'main'
        run: |

          git config --global \
            user.email "github@workflow"

          git config --global \
            user.name "GitHub Workflows"

          cd static
          git add badges

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'Update from workflow'
            git push origin static
          fi
